#!/bin/sh
#

# Argument checking
if [ $# -gt 1 ]; then
  echo "Usage: xpl2gpl <file_name[.xpl]>" 1>&2;
  exit 1;
fi

# Extracting file-basename from the xplot filename 
BASENAME=`basename $1 .xpl`
rm -f ${BASENAME}.dataset.*.* ${BASENAME}.gpl ${BASENAME}.ps ${BASENAME}.files ${BASENAME}.datasets ${BASENAME}.labels

gawk -v BASENAME=$BASENAME '

function data_set_name(color, style)
{
	array_index = color "." style; 
	++dataset_type[array_index];
	return(BASENAME ".dataset." color "." style);
}

function file_name(dataset)
{
	return(BASENAME ".dataset." dataset);
}

function format_to(datatype) 
{
	if (datatype == "unsigned")
		return("%.0f");
	if (datatype == "signed")
		return("%.0f");
	if (datatype == "double")
		return("%.0f");
	if (datatype == "timeval")
		return("%.3f");
	if (datatype == "dtime")
		return("%.3f");
	printf("Unknown datatype: \"%s\"\n", datatype) > "/dev/tty";
	exit;
}

BEGIN {
	/* Special prerequisite for Time-Sequence diagrams */
	tsg = index("_tsg", BASENAME) != -1;

	styles["dot"] = "dots";
	styles["line"] = "lines";
	styles["diamond"] = "points pt 12 ps PS";
	styles["box"] = "points pt 4 ps PS";
	styles["cross"] = "points pt 2 ps PS";
	styles["uarrow"] = "points pt 1 ps PS";
#	styles["uarrow"] = "points pt 8 ps PS";
	styles["darrow"] = "points pt 1 ps PS";
#	styles["darrow"] = "points pt 10 ps PS";
	styles["dtick"] = "points pt 1 ps PS";
	styles["utick"] = "points pt 1 ps PS";
	styles["htick"] = "points pt 1 ps PS";
	styles["x"] = "points pt 2 ps PS";
	styles["plus"] = "points pt 1 ps PS";

	colors["white"] = -1;
	colors["green"] = 2;
	colors["red"] = 1;
	colors["blue"] = 3;
	colors["yellow"] = 7;
	colors["purple"] = 6;
	colors["orange"] = 9;
	colors["magenta"] = 4;
	colors["pink"] = 5;

	TITLE = FILENAME;
	XLABEL = "x";
	YLABEL = "y";

	current_dataset_color = "white";
	current_dataset_style = "white";
	prev_dataset_color = "white";
	prev_dataset_style = "white";

	remove_files = BASENAME ".dataset.*.*";
	gpl_file = BASENAME ".gpl";
	labels_file = BASENAME ".labels";
	printf("") >> labels_file;
	current_dataset_file = "/nofile";

	# get the axis types
	getline;
	xaxis_type=$1;
	yaxis_type=$2;
	xaxis_format=format_to(xaxis_type);
	yaxis_format=format_to(yaxis_type);
}

/^title$/  { getline; TITLE=$0; next; }

/^xlabel$/ { getline; XLABEL=$0; next; }

/^ylabel$/ { getline; YLABEL=$0; next; }

/^(white|green|red|blue|yellow|purple|orange|magenta|pink)$/ {
	current_dataset_color = $1;
	next;
}



/^([lr]arrow|box|diamond|dot|plus|[dhlruv]tick|x) / {
	current_dataset_style = $1;
	if(NF == 4)
		current_dataset_color = $4;
	xpoint = $2;
	ypoint = $3;
	current_dataset_file = data_set_name(current_dataset_color, current_dataset_style); 
	printf("%f %f\n", xpoint, ypoint) >> current_dataset_file;
	next;
}

/^d?line / {
	current_dataset_style = $1;
	current_dataset_file = data_set_name(current_dataset_color, current_dataset_style); 
	xpoint=$2;
	ypoint=$3;
	x1point=$4;
	y1point=$5;
	printf("%f %f\n", xpoint, ypoint) >> current_dataset_file;
	printf("%f %f\n", x1point, y1point) >> current_dataset_file;
	printf("\n") >> current_dataset_file;
	next;
}

/^[du]arrow / {
	if(NR == 4)
	    prev_dataset_color = $4;
	else
	    prev_dataset_color = current_dataset_color;
	
	prev_dataset_style = $1;
	xpoint=$2;
	ypoint=$3;
	getline;
	if(NR == 4)
		current_dataset_color = $4;

	x1point=$2;
	y1point=$3;

	if(NR == 5) {
		x2point=$4;
		y2point=$5;
	}
	current_dataset_style = $1;
	current_dataset_file = data_set_name(prev_dataset_color, prev_dataset_style);
	printf("%f %f\n", xpoint, ypoint) >> current_dataset_file;
	current_dataset_file = data_set_name(current_dataset_color, current_dataset_style);
	printf("%f %f\n", x1point, y1point) >> current_dataset_file;
	if(current_dataset_style == "line" || current_dataset_style == "dline") {
		printf("%f %f\n", x1point, y1point) >> current_dataset_file;
		printf("\n") >> current_dataset_file;
	}
	next;
}

/^[ablr]text /    {
	xpoint=$2;
	ypoint=$3;
	if(NR == 4)
		current_dataset_color = $4;
	if ($1 == "atext") { 
		ox=0; oy=1;
	} else if ($1 == "btext") {
		ox=0; oy=-1; 
	} else if ($1 == "ltext") {
		ox=-1; oy=0; 
	} else if ($1 == "rtext") {
		ox=1; oy=0; 
	}
	getline;
	text = $0;
	if (current_dataset_color == "pink" && text == "O")
		ooos_present = 1;
	print "set label \"" text "\" at " xpoint ", " ypoint " center offset " ox ", " oy " tc lt " colors[current_dataset_color] " noenhanced front" >> labels_file;
	next;
}


/^go$/	{next}

{
	printf("Bad line %d: \"%s\"\n", NR, $0);
	next;
}

END {
	plot = "";
	plot = plot "PS = 0.1;\n";
	plot = plot "G = -1;\n";
	plot = plot "set term x11 enhanced raise;\n";
	gsub("\"", "\\\"", TITLE);
	plot = plot "set title \"" TITLE "\";\n";
	plot = plot "set xlabel \"" XLABEL "\";\n";
	plot = plot "set ylabel \"" YLABEL "\";\n";
	plot = plot "set format x \"" xaxis_format "\";\n";
	plot = plot "set format y \"" yaxis_format "\";\n";
	plot = plot "set tics border out mirror;\n";
	plot = plot "unset x2tics;\n";
	plot = plot "unset y2tics;\n";
	plot = plot "set mxtics;\n";
	plot = plot "set mytics;\n";
	plot = plot "load \"" labels_file "\";\n";

	first = 1;

	for (dataset in dataset_type) {

		FILE=file_name(dataset);

		if (split(dataset, set, ".") != 2) {
			printf("Bad datatype: \"%s\"\n", datatype); 
			continue;
		}
		color = set[1];
		style = set[2];

		if (first) {
			plot = plot "plot ";
			first = 0;
		} else 
			plot = plot ", ";

		plot = plot "\"" FILE "\" using 1:2 with ";

		if (styles[style])
			plot = plot styles[style];
		else 
			plot = plot "points pt 28 \\\n# \"" style "\" is undefined \\\n";

		if (colors[color])
			plot = plot " lc " colors[color];

		if (tsg)
			if (color == "red" && style == "line")
				retransmits_present = 1;
			if (color == "purple" && style == "line")
				sacks_present = 1;

		plot = plot " notitle";
	}

	/* Add a key for Time Sequence Diagrams */
	if (tsg) {
		plot = plot ", 1/0 lc " colors["yellow"] " title \"Advertised Window\"";
		plot = plot ", 1/0 lc " colors["green"] " title \"Cumulative ACK\"";
		plot = plot ", 1/0 lc " colors["white"] " title \"Sent Segments\"";
		if (retransmits_present)
			plot = plot ", 1/0 with points lc " colors["red"] " pt 1 title \"Retransmitted Segment\"";
		if (sacks_present)
			plot = plot ", 1/0 with points lc " colors["purple"] " pt 1 title \"Selective Acknowledgements\"";
		if (ooos_present)
			plot = plot ", 1/0 with points lc " colors["pink"] " pt 6 title \"Out-of-order segments\"";
		plot = plot ";"
		plot = plot "set key box top left;\n";
		plot = plot "replot;\n";
	} else {
		plot = plot ";\n";
	}

	if (labels_present)
		plot = plot "load \"" labels_file "\";\n";

	/* Add key bindings */
	plot = plot "bind all \"ctrl-p\" \"set output \\\"" BASENAME ".pdf\\\"; " \
			"set term pdf color solid rounded enhanced fname \\\"Helvetica\\\" fsize 5 linewidth 1.0; replot; " \
			"set term x11 enhanced raise; replot; set mouse;\";\n";
	plot = plot "bind all \"ctrl-o\" \"set xr[0:]; set yr[0:]; replot;\";";
	plot = plot "bind all \"ctrl-j\" \"PS = PS+0.1; replot;\";";
	plot = plot "bind all \"ctrl-k\" \"PS = PS-0.1; replot;\";";
	plot = plot "bind all \"ctrl-r\" \"G = G+1; " \
			"if (G%4==0) set grid; replot; else if (G%4==1) set grid xtics ytics mxtics; replot; " \
			"else if (G%4==2) set grid xtics ytics mxtics mytics; replot; else unset grid; replot;\";";

	plot = plot "pause -1;\n";

	print plot >> gpl_file;
	close(gpl_file);

} ' $1
